{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","loading","total","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","firstPageRows","slice","className","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","Styles","styled","div","App","useState","setTotal","users","setUsers","setLoading","t","useEffect","axios","get","then","res","length","market_cap","useMemo","Header","accessor","Cell","url","value","src","alt","width","height","usdPrice","toLocaleString","style","currency","newP","toFixed","usdP","athDate","Date","getTime","today","Math","round","p","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55cb6524.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { useTable, useSortBy} from \"react-table\";\n\n\nexport default function Table({ columns, data, loading, total }) {\n\n\n\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    \n  } = useTable(\n    {\n      columns,\n      data,\n      loading,\n      total\n    },\n    \n  \n    useSortBy\n  );\n \n\n  // We don't want to render all 2000 rows for this example, so cap\n  // it at 20 for this use case\n  const firstPageRows = rows.slice(0, 100);\n\n  return (\n    <>\n   \n      <table  className=\"table\" {...getTableProps()}>\n        <thead className= \"table__head\">\n          {headerGroups.map((headerGroup) => (\n            <tr className=\"table__row\" {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                // Add the sorting props to control sorting. For this example\n                // we can add them into the header props\n                <th className= \"table__heading\"{...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? \" ðŸ”½\"\n                        : \" ðŸ”¼\"\n                      : \"\"}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody className=\"table__body\" {...getTableBodyProps()}>\n          {firstPageRows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr className=\"table__row\" {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td className=\"table__cell\"\n                      {...cell.getCellProps({\n                  \n                      })}\n                    >\n                      {cell.render(\"Cell\")}\n                    \n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <br />\n        \n    </>\n  )\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Table from \"./Table\";\n\n\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nexport default function App() {\n  const [total, setTotal] = useState(0);\n  const [users, setUsers] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n\n  let t = 0\n  useEffect(() => {\n\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n      )\n      .then((res) => {\n        for (let i = 0; i < res.data.length; i++) {\n          t += res.data[i].market_cap\n        }\n        setUsers(res.data);\n        setLoading(false);\n        setTotal(t);\n      });\n  }, []);\n \n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Rank\",\n        accessor: \"market_cap_rank\"\n      },\n      {\n        Header: \"Icon\",\n        accessor: \"image\",\n        Cell: ({ cell: { value } }) => {\n          const url = value\n          return (\n            <>\n            <img \n              src={url}\n              alt=\"new\"\n              width=\"50\"\n              height=\"50\"\n            />\n            </>\n          )\n       },\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\"\n      },\n      {\n        Header: \"Symbol\",\n        accessor: \"symbol\"\n      },\n\n      {\n        Header: \"Price\",\n        accessor: \"current_price\",\n        Cell: ({ cell: { value } }) => {\n          const usdPrice = value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n          return (\n            <>\n            {usdPrice}\n            </>\n          )\n      },\n    },\n    {\n      Header: \"Price Change % in 24 hours\",\n      accessor: \"price_change_percentage_24h\",\n      Cell: ({ cell: { value } }) => {\n        const newP = value.toFixed(3) + \"%\";\n          return (\n            <>\n            {newP}\n            </>\n          )\n      },\n    },\n    {\n      Header: \"All-time High \",\n      accessor: \"ath\",\n      Cell: ({ cell: { value } }) => {\n        const usdP = value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })\n          return (\n            <>\n            {usdP}\n            </>\n          )\n      },\n    },\n    {\n      Header: \"# days since ATH\",\n      accessor: \"ath_date\",\n      Cell: ({ cell: { value } }) => {\n        const athDate = new Date(value).getTime();\n        const today = new Date().getTime()  \n          return (\n             `${Math.round((today - athDate)/(1000*60*60*24))} days`\n          );\n        }\n      },\n      {\n        Header: \"Market Cap and % of Total Market Cap\",\n        accessor: \"market_cap\",\n        Cell: ({ cell: { value } }) => {\n       \n          const ptt = (value / t)\n          const p = (ptt*100).toFixed(3)+ \"%\"\n       \n          return (\n            <>\n             {value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })}\n              <br></br>\n              <br></br> \n              {p}\n          </>\n            \n          );\n        \n        } \n      }  \n    ],\n    [] \n  );\n\n  return (\n\n       <Styles>\n      <Table columns={columns} data={users} loading={loading} total={total} />;\n   \n    </Styles>\n  \n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}